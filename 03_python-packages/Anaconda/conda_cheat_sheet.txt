--------------------------------------------------------------------
Conda basics
--------------------------------------------------------------------

Verify conda is installed, check version number
설치 확인, 버전 숫자 확인
- conda info

Update conda to the current version
최신 버전으로 콘다 업데이트
- conda update conda

Install a package included in Anaconda
아나콘다가 포함된 패키지 인스톨
- conda install PACKAGENAME
- conda install python==VERSION INFO

Run a package after install, example Spyder*
인스톨 후 패키지 실행
- spyder

Update any installed program
인스톨 된 패키지 업데이트
- conda update PACKAGENAME

Command line help
help 실행
- COMMANDNAME --help
- conda install --help

--------------------------------------------------------------------
Using environments
--------------------------------------------------------------------

Create a new environment named py35, install Python 3.5
새로운 가상환경 이름 설정, 파이썬 버전 설정
- conda create --name py35 python=3.5

Activate the new environment to use it
사용하기 위한 새로운 가상환경 활성화
- WINDOWS: activate py35
- LINUX, macOS: source activate py35

Get a list of all my environments, active environment is shown with *
가상환경이 무엇들이 있는지 리스트를 보여준다. 활성화된 환경엔 *이 붙음
- conda env list

Make exact copy of an environment
똑같은 가상환경을 복사해서 생성
- conda create --clone py35 --name py35-2

List all packages and versions installed in active environment
활성화된 가상환경에 패키지와 버전들이 무엇이 있는지 리스트로 보여줌
- conda list

List the history of each change to the current environment
현재 가상환경에 설치한 패키지의 히스토리를 보여줌 
- conda list --revisions

Restore environment to a previous revision
이전 revision으로 가상환경을 복구
- conda install --revision 2

Save environment to a text file
가상환경을 txt파일로 저장
- conda list --explicit > bio-env.txt

Delete an environment and everything in it
가상환경 완전히 삭제
- conda env remove --name bio-env

Deactivate the current environment
현재 가상환경을 비활성화
- WINDOWS: deactivate
- macOS, LINUX: source deactivate

Create environment from a text file
txt파일을 통해 가상환경을 만들기
- conda env create --file bio-env.txt

Stack commands: create a new environment, name it bio-env and install the biopython package
새로운 환경 만들기, bio-env라는 이름으로 만들기, biopytohn 패키지를 다운하는 스텍 커맨드
- conda create --name bio-env biopython

--------------------------------------------------------------------
Finding conda packages
--------------------------------------------------------------------

Use conda to search for a package
콘다를 사용해 패키지를 검색
- conda search PACKAGENAME

See list of all packages in Anaconda
모든 패키지 리스트를 보기
- https://docs.anaconda.com/anaconda/packages/pkg-docs

--------------------------------------------------------------------
Installing and updating packages
--------------------------------------------------------------------

Install a new package (Jupyter Notebook) in the active environment
새로운 패키지 (ex.주피터 노트북) 설치
- conda install jupyter

Run an installed package (Jupyter Notebook)
패키지를 실행
- jupyter-notebook

Install a new package (toolz) in a different environment (bio-env)
다른 환경에 특정 패키지를 인스톨
- conda install --name bio-env toolz

Update a package in the current environment
- conda update -n root conda (아나콘다 자체 업데이트)
- conda update --all (전부 업데이트)
- conda update scikit-learn (현재 환경의 패키지를 업데이트)

Install a package (boltons) from a specific channel (conda-forge)
특정 체널를 통해 패키지를 인스톨
- conda install --channel conda-forge boltons

Install a package directly from PyPI into the current active environment using pip
PyPI를 통해 패키지를 현재 활성화된 환경에 pip를 활용해서 인스톨
- pip install boltons

Remove one or more packages (toolz, boltons) from a specific environment (bio-env)
하나 또는 여러 개의 패키지를 특정 환경에서 삭제
- conda remove --name bio-env toolz boltons

--------------------------------------------------------------------
Managing multiple versions of Python
--------------------------------------------------------------------

Install different version of Python in a new environment named py34
다른 버전의 파이썬 환경을 인스톨
- conda create --name py34 python=3.4

Switch to the new environment that has a different version of Python
다른 버전의 파이썬을 가진 새로운 환경으로 교체
- Windows: activate py34
- Linux, macOS: source activate py34

Show the locations of all versions of Python that are currently in the path
(NOTE: The first version of Python in the list will be executed.)
최근 파이썬 exe 파일의 경로를 보여준다.
- Windows: where python
- Linux, macOS: which -a python


Show version information for the current active Python
현재 활성화된 파이썬의 버전 정보를 보여줌
- python --version

--------------------------------------------------------------------
기타
--------------------------------------------------------------------
- cmd에서 pip 명령 안먹을 때
https://m.blog.naver.com/PostView.nhn?blogId=lee95292&logNo=221205091279&proxyReferer=https:%2F%2Fwww.google.com%2F

- git sync는 vscode 창에서 왼쪽 밑에 사람 클릭


